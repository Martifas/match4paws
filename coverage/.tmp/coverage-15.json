{"/home/marty/turing/4-module/4-sprint/match4paws/src/components/ui/forms/FormSelect.tsx":{"path":"/home/marty/turing/4-module/4-sprint/match4paws/src/components/ui/forms/FormSelect.tsx","statementMap":{"0":{"start":{"line":16,"column":23},"end":{"line":18,"column":3}},"1":{"start":{"line":17,"column":4},"end":{"line":17,"column":33}},"2":{"start":{"line":19,"column":2},"end":{"line":38,"column":11}},"3":{"start":{"line":25,"column":125},"end":{"line":29,"column":12}}},"fnMap":{"0":{"name":"FormSelect","decl":{"start":{"line":8,"column":16},"end":{"line":8,"column":26}},"loc":{"start":{"line":15,"column":3},"end":{"line":39,"column":1}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":23},"end":{"line":16,"column":24}},"loc":{"start":{"line":16,"column":34},"end":{"line":18,"column":3}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":97},"end":{"line":25,"column":98}},"loc":{"start":{"line":25,"column":125},"end":{"line":29,"column":12}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":18}},"type":"default-arg","locations":[{"start":{"line":13,"column":13},"end":{"line":13,"column":18}}],"line":13},"1":{"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":18}},"type":"default-arg","locations":[{"start":{"line":14,"column":14},"end":{"line":14,"column":18}}],"line":14}},"s":{"0":3,"1":1,"2":3,"3":6},"f":{"0":3,"1":1,"2":6},"b":{"0":[2],"1":[2]},"inputSourceMap":{"version":3,"sources":["/home/marty/turing/4-module/4-sprint/match4paws/src/components/ui/forms/FormSelect.tsx"],"sourcesContent":["import {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n} from \"@mui/material\";\n\ntype Option = {\n  readonly id: string;\n  readonly label: string;\n  readonly IconComponent?: () => React.ReactElement;\n};\n\ntype FormSelectProps = {\n  label: string;\n  value: string;\n  onChange: (value: string) => void;\n  options: readonly Option[];\n  required?: boolean;\n  fullWidth?: boolean;\n};\n\nexport function FormSelect({\n  label,\n  value,\n  onChange,\n  options,\n  required = false,\n  fullWidth = true,\n}: FormSelectProps) {\n  const handleChange = (event: SelectChangeEvent) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <FormControl fullWidth={fullWidth} required={required}>\n      <InputLabel>{label}</InputLabel>\n      <Select value={value} label={label} onChange={handleChange}>\n        {options.map((option) => (\n          <MenuItem key={option.id} value={option.id}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n"],"mappings":"AAqCM;AArCN;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OAEK;AAiBA,gBAAS,WAAW;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX,YAAY;AACd,GAAoB;AAClB,QAAM,eAAe,CAAC,UAA6B;AACjD,aAAS,MAAM,OAAO,KAAK;AAAA,EAC7B;AAEA,SACE,uBAAC,eAAY,WAAsB,UACjC;AAAA,2BAAC,cAAY,mBAAb;AAAA;AAAA;AAAA;AAAA,WAAmB;AAAA,IACnB,uBAAC,UAAO,OAAc,OAAc,UAAU,cAC3C,kBAAQ,IAAI,CAAC,WACZ,uBAAC,YAAyB,OAAO,OAAO,IACrC,iBAAO,SADK,OAAO,IAAtB;AAAA;AAAA;AAAA;AAAA,WAEA,CACD,KALH;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,OARF;AAAA;AAAA;AAAA;AAAA,SASA;AAEJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"18f23886fe2e89bc005f6df67038ab19f9944e2c"}}
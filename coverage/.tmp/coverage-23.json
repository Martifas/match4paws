{"/home/marty/turing/4-module/4-sprint/match4paws/src/hooks/useConversations.ts":{"path":"/home/marty/turing/4-module/4-sprint/match4paws/src/hooks/useConversations.ts","statementMap":{"0":{"start":{"line":4,"column":26},"end":{"line":4,"column":38}},"1":{"start":{"line":5,"column":32},"end":{"line":5,"column":46}},"2":{"start":{"line":6,"column":28},"end":{"line":6,"column":42}},"3":{"start":{"line":7,"column":20},"end":{"line":18,"column":8}},"4":{"start":{"line":8,"column":4},"end":{"line":17,"column":5}},"5":{"start":{"line":9,"column":18},"end":{"line":9,"column":51}},"6":{"start":{"line":10,"column":19},"end":{"line":10,"column":35}},"7":{"start":{"line":11,"column":6},"end":{"line":11,"column":34}},"8":{"start":{"line":12,"column":6},"end":{"line":12,"column":21}},"9":{"start":{"line":14,"column":6},"end":{"line":14,"column":47}},"10":{"start":{"line":16,"column":6},"end":{"line":16,"column":24}},"11":{"start":{"line":19,"column":2},"end":{"line":23,"column":26}},"12":{"start":{"line":20,"column":4},"end":{"line":20,"column":16}},"13":{"start":{"line":21,"column":15},"end":{"line":21,"column":45}},"14":{"start":{"line":22,"column":4},"end":{"line":22,"column":35}},"15":{"start":{"line":22,"column":17},"end":{"line":22,"column":34}},"16":{"start":{"line":24,"column":2},"end":{"line":24,"column":69}}},"fnMap":{"0":{"name":"useConversations","decl":{"start":{"line":3,"column":24},"end":{"line":3,"column":40}},"loc":{"start":{"line":3,"column":56},"end":{"line":25,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":32},"end":{"line":7,"column":33}},"loc":{"start":{"line":7,"column":44},"end":{"line":18,"column":3}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":12},"end":{"line":19,"column":13}},"loc":{"start":{"line":19,"column":18},"end":{"line":23,"column":3}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":11},"end":{"line":22,"column":12}},"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":34}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":41},"end":{"line":3,"column":54}},"type":"default-arg","locations":[{"start":{"line":3,"column":50},"end":{"line":3,"column":54}}],"line":3}},"s":{"0":2,"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":0,"10":2,"11":2,"12":1,"13":1,"14":1,"15":1,"16":2},"f":{"0":2,"1":2,"2":1,"3":1},"b":{"0":[0]},"inputSourceMap":{"version":3,"sources":["/home/marty/turing/4-module/4-sprint/match4paws/src/hooks/useConversations.ts"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\n\nexport type Conversation = {\n  id: string;\n  petId: string;\n  adopterId: string;\n  ownerId: string;\n  createdAt: string;\n  unread: number;\n  lastSentAt: string | null;\n  lastBody: string | null;\n  thumbUrl: string | null;\n};\n\nexport default function useConversations(pollMs = 15_000) {\n  const [list, setList] = useState<Conversation[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchOnce = useCallback(async () => {\n    try {\n      const res = await fetch('/api/conversations');\n      const json = await res.json();\n      setList(json.conversations);\n      setError(null);\n    } catch {\n      setError('Failed to load conversations');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchOnce();\n    const id = setInterval(fetchOnce, pollMs);\n    return () => clearInterval(id);\n  }, [fetchOnce, pollMs]);\n\n  return { conversations: list, loading, error, refresh: fetchOnce };\n}\n"],"mappings":";AAEA,SAAS,UAAU,WAAW,mBAAmB;AAcjD,wBAAwB,iBAAiB,SAAS,MAAQ;AACxD,QAAM,CAAC,MAAM,OAAO,IAAI,SAAyB,CAAC,CAAC;AACnD,QAAM,CAAC,SAAS,UAAU,IAAI,SAAS,IAAI;AAC3C,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAwB,IAAI;AAEtD,QAAM,YAAY,YAAY,YAAY;AACxC,QAAI;AACF,YAAM,MAAM,MAAM,MAAM,oBAAoB;AAC5C,YAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,cAAQ,KAAK,aAAa;AAC1B,eAAS,IAAI;AAAA,IACf,QAAQ;AACN,eAAS,8BAA8B;AAAA,IACzC,UAAE;AACA,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,YAAU,MAAM;AACd,cAAU;AACV,UAAM,KAAK,YAAY,WAAW,MAAM;AACxC,WAAO,MAAM,cAAc,EAAE;AAAA,EAC/B,GAAG,CAAC,WAAW,MAAM,CAAC;AAEtB,SAAO,EAAE,eAAe,MAAM,SAAS,OAAO,SAAS,UAAU;AACnE;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f401a0bfaf1e0936ca00e8c8db0b814e12eef1c5"}}
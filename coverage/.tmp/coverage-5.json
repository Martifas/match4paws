{"/home/marty/turing/4-module/4-sprint/match4paws/src/components/ui/buttons/MultiToggleChip.tsx":{"path":"/home/marty/turing/4-module/4-sprint/match4paws/src/components/ui/buttons/MultiToggleChip.tsx","statementMap":{"0":{"start":{"line":4,"column":2},"end":{"line":4,"column":51}},"1":{"start":{"line":13,"column":17},"end":{"line":16,"column":3}},"2":{"start":{"line":14,"column":19},"end":{"line":14,"column":40}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":76}},"4":{"start":{"line":15,"column":45},"end":{"line":15,"column":53}},"5":{"start":{"line":17,"column":2},"end":{"line":43,"column":11}},"6":{"start":{"line":18,"column":15},"end":{"line":18,"column":26}},"7":{"start":{"line":19,"column":19},"end":{"line":19,"column":40}},"8":{"start":{"line":20,"column":4},"end":{"line":38,"column":6}},"9":{"start":{"line":23,"column":23},"end":{"line":23,"column":33}}},"fnMap":{"0":{"name":"defaultGetId","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":21}},"loc":{"start":{"line":3,"column":28},"end":{"line":5,"column":1}},"line":3},"1":{"name":"MultiToggleChip","decl":{"start":{"line":6,"column":24},"end":{"line":6,"column":39}},"loc":{"start":{"line":12,"column":3},"end":{"line":44,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":17},"end":{"line":13,"column":18}},"loc":{"start":{"line":13,"column":25},"end":{"line":16,"column":3}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":38},"end":{"line":15,"column":39}},"loc":{"start":{"line":15,"column":45},"end":{"line":15,"column":53}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":96},"end":{"line":17,"column":97}},"loc":{"start":{"line":17,"column":106},"end":{"line":39,"column":3}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":17},"end":{"line":23,"column":18}},"loc":{"start":{"line":23,"column":23},"end":{"line":23,"column":33}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":9},"end":{"line":4,"column":50}},"type":"cond-expr","locations":[{"start":{"line":4,"column":36},"end":{"line":4,"column":40}},{"start":{"line":4,"column":43},"end":{"line":4,"column":50}}],"line":4},"1":{"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":22}},"type":"default-arg","locations":[{"start":{"line":11,"column":10},"end":{"line":11,"column":22}}],"line":11},"2":{"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":74}},"type":"cond-expr","locations":[{"start":{"line":15,"column":22},"end":{"line":15,"column":54}},{"start":{"line":15,"column":57},"end":{"line":15,"column":74}}],"line":15},"3":{"loc":{"start":{"line":26,"column":10},"end":{"line":26,"column":124}},"type":"cond-expr","locations":[{"start":{"line":26,"column":19},"end":{"line":26,"column":63}},{"start":{"line":26,"column":66},"end":{"line":26,"column":124}}],"line":26}},"s":{"0":14,"1":6,"2":4,"3":4,"4":1,"5":6,"6":16,"7":16,"8":16,"9":4},"f":{"0":14,"1":6,"2":4,"3":1,"4":16,"5":4},"b":{"0":[12,2],"1":[5],"2":[1,3],"3":[2,14]},"inputSourceMap":{"version":3,"sources":["/home/marty/turing/4-module/4-sprint/match4paws/src/components/ui/buttons/MultiToggleChip.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\nexport type MultiToggleValue = string[];\n\nfunction defaultGetId<Item extends string | { id: string }>(item: Item) {\n  return typeof item === 'string' ? item : item.id;\n}\n\nexport default function MultiToggleChip<\n  T extends readonly (\n    | string\n    | { id: string; label?: string; icon?: React.ReactNode }\n  )[],\n>({\n  items,\n  selected,\n  onChange,\n  render,\n  getId = defaultGetId as (item: T[number]) => string,\n}: {\n  items: T;\n  selected: MultiToggleValue;\n  onChange: (val: MultiToggleValue) => void;\n  render: (item: T[number], active: boolean) => React.ReactNode;\n  getId?: (item: T[number]) => string;\n}) {\n  const toggle = (id: string) => {\n    const exists = selected.includes(id);\n    onChange(exists ? selected.filter(i => i !== id) : [...selected, id]);\n  };\n\n  return (\n    <div className=\"flex flex-wrap gap-2\">\n      {items.map(item => {\n        const id = getId(item);\n        const active = selected.includes(id);\n\n        return (\n          <button\n            key={id}\n            onClick={() => toggle(id)}\n            className={[\n              'rounded-full border px-4 py-1 text-sm transition shadow-sm',\n              active\n                ? 'bg-orange-500 text-white border-orange-500'\n                : 'bg-white text-gray-800 border-gray-300 hover:bg-gray-100',\n            ].join(' ')}\n          >\n            {render(item, active)}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":";AAwCU;AAlCV,SAAS,aAAmD,MAAY;AACtE,SAAO,OAAO,SAAS,WAAW,OAAO,KAAK;AAChD;AAEA,wBAAwB,gBAKtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAQ;AACV,GAMG;AACD,QAAM,SAAS,CAAC,OAAe;AAC7B,UAAM,SAAS,SAAS,SAAS,EAAE;AACnC,aAAS,SAAS,SAAS,OAAO,OAAK,MAAM,EAAE,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC;AAAA,EACtE;AAEA,SACE,uBAAC,SAAI,WAAU,wBACZ,gBAAM,IAAI,UAAQ;AACjB,UAAM,KAAK,MAAM,IAAI;AACrB,UAAM,SAAS,SAAS,SAAS,EAAE;AAEnC,WACE;AAAA,MAAC;AAAA;AAAA,QAEC,SAAS,MAAM,OAAO,EAAE;AAAA,QACxB,WAAW;AAAA,UACT;AAAA,UACA,SACI,+CACA;AAAA,QACN,EAAE,KAAK,GAAG;AAAA,QAET,iBAAO,MAAM,MAAM;AAAA;AAAA,MATf;AAAA,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA;AAAA,EAEJ,CAAC,KAnBH;AAAA;AAAA;AAAA;AAAA,SAoBA;AAEJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"84b99668008ee8f20f6ebe8066cfac5e43e0cb78"}}
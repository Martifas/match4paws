{"/home/marty/turing/4-module/4-sprint/match4paws/src/components/profile/ProfileManagement.tsx":{"path":"/home/marty/turing/4-module/4-sprint/match4paws/src/components/profile/ProfileManagement.tsx","statementMap":{"0":{"start":{"line":18,"column":30},"end":{"line":18,"column":46}},"1":{"start":{"line":19,"column":25},"end":{"line":26,"column":3}},"2":{"start":{"line":20,"column":11},"end":{"line":24,"column":5}},"3":{"start":{"line":32,"column":6},"end":{"line":32,"column":36}},"4":{"start":{"line":33,"column":26},"end":{"line":33,"column":41}},"5":{"start":{"line":34,"column":28},"end":{"line":34,"column":42}},"6":{"start":{"line":35,"column":15},"end":{"line":52,"column":3}},"7":{"start":{"line":36,"column":4},"end":{"line":36,"column":23}},"8":{"start":{"line":36,"column":16},"end":{"line":36,"column":23}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":18}},"10":{"start":{"line":38,"column":4},"end":{"line":51,"column":5}},"11":{"start":{"line":39,"column":18},"end":{"line":43,"column":8}},"12":{"start":{"line":44,"column":6},"end":{"line":44,"column":37}},"13":{"start":{"line":44,"column":19},"end":{"line":44,"column":37}},"14":{"start":{"line":45,"column":6},"end":{"line":45,"column":21}},"15":{"start":{"line":46,"column":6},"end":{"line":46,"column":19}},"16":{"start":{"line":48,"column":6},"end":{"line":48,"column":22}},"17":{"start":{"line":50,"column":6},"end":{"line":50,"column":21}},"18":{"start":{"line":53,"column":2},"end":{"line":62,"column":13}},"19":{"start":{"line":54,"column":4},"end":{"line":62,"column":13}},"20":{"start":{"line":63,"column":2},"end":{"line":192,"column":11}},"21":{"start":{"line":94,"column":27},"end":{"line":94,"column":57}},"22":{"start":{"line":112,"column":29},"end":{"line":112,"column":49}},"23":{"start":{"line":130,"column":27},"end":{"line":130,"column":60}},"24":{"start":{"line":168,"column":23},"end":{"line":168,"column":37}}},"fnMap":{"0":{"name":"ProfileManagement","decl":{"start":{"line":17,"column":24},"end":{"line":17,"column":41}},"loc":{"start":{"line":17,"column":44},"end":{"line":193,"column":1}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":11},"end":{"line":24,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":15},"end":{"line":35,"column":16}},"loc":{"start":{"line":35,"column":27},"end":{"line":52,"column":3}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":94,"column":20},"end":{"line":94,"column":21}},"loc":{"start":{"line":94,"column":27},"end":{"line":94,"column":57}},"line":94},"4":{"name":"(anonymous_4)","decl":{"start":{"line":112,"column":20},"end":{"line":112,"column":21}},"loc":{"start":{"line":112,"column":29},"end":{"line":112,"column":49}},"line":112},"5":{"name":"(anonymous_5)","decl":{"start":{"line":130,"column":20},"end":{"line":130,"column":21}},"loc":{"start":{"line":130,"column":27},"end":{"line":130,"column":60}},"line":130},"6":{"name":"(anonymous_6)","decl":{"start":{"line":168,"column":17},"end":{"line":168,"column":18}},"loc":{"start":{"line":168,"column":23},"end":{"line":168,"column":37}},"line":168}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":28}},"type":"binary-expr","locations":[{"start":{"line":21,"column":12},"end":{"line":21,"column":22}},{"start":{"line":21,"column":26},"end":{"line":21,"column":28}}],"line":21},"1":{"loc":{"start":{"line":22,"column":13},"end":{"line":22,"column":30}},"type":"binary-expr","locations":[{"start":{"line":22,"column":13},"end":{"line":22,"column":24}},{"start":{"line":22,"column":28},"end":{"line":22,"column":30}}],"line":22},"2":{"loc":{"start":{"line":23,"column":15},"end":{"line":23,"column":34}},"type":"binary-expr","locations":[{"start":{"line":23,"column":15},"end":{"line":23,"column":28}},{"start":{"line":23,"column":32},"end":{"line":23,"column":34}}],"line":23},"3":{"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":23}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":23}},{"start":{},"end":{}}],"line":36},"4":{"loc":{"start":{"line":44,"column":6},"end":{"line":44,"column":37}},"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":37}},{"start":{},"end":{}}],"line":44},"5":{"loc":{"start":{"line":53,"column":2},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":62,"column":13}},{"start":{},"end":{}}],"line":53},"6":{"loc":{"start":{"line":53,"column":6},"end":{"line":53,"column":24}},"type":"binary-expr","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":15}},{"start":{"line":53,"column":19},"end":{"line":53,"column":24}}],"line":53},"7":{"loc":{"start":{"line":145,"column":20},"end":{"line":145,"column":77}},"type":"binary-expr","locations":[{"start":{"line":145,"column":20},"end":{"line":145,"column":24}},{"start":{"line":145,"column":28},"end":{"line":145,"column":34}},{"start":{"line":145,"column":38},"end":{"line":145,"column":55}},{"start":{"line":145,"column":59},"end":{"line":145,"column":77}}],"line":145},"8":{"loc":{"start":{"line":147,"column":20},"end":{"line":147,"column":53}},"type":"cond-expr","locations":[{"start":{"line":147,"column":27},"end":{"line":147,"column":36}},{"start":{"line":147,"column":39},"end":{"line":147,"column":53}}],"line":147},"9":{"loc":{"start":{"line":169,"column":18},"end":{"line":177,"column":16}},"type":"cond-expr","locations":[{"start":{"line":169,"column":51},"end":{"line":173,"column":16}},{"start":{"line":173,"column":35},"end":{"line":177,"column":16}}],"line":169}},"s":{"0":28,"1":28,"2":18,"3":28,"4":28,"5":28,"6":28,"7":5,"8":0,"9":5,"10":5,"11":5,"12":3,"13":1,"14":2,"15":2,"16":2,"17":4,"18":28,"19":2,"20":26,"21":8,"22":3,"23":11,"24":1},"f":{"0":28,"1":18,"2":5,"3":8,"4":3,"5":11,"6":1},"b":{"0":[18,2],"1":[18,2],"2":[18,2],"3":[0,5],"4":[1,2],"5":[2,26],"6":[28,27],"7":[26,21,13,12],"8":[5,21],"9":[2,24]},"inputSourceMap":{"version":3,"sources":["/home/marty/turing/4-module/4-sprint/match4paws/src/components/profile/ProfileManagement.tsx"],"sourcesContent":["'use client';\n\nimport { useMemo, useState } from 'react';\nimport {\n  Box,\n  TextField,\n  Alert,\n  CircularProgress,\n  Snackbar,\n} from '@mui/material';\nimport { MuiTelInput } from 'mui-tel-input';\n\nimport useUserProfile from '@/hooks/useUserProfile';\nimport Header from '@/components/ui/containers/Header';\nimport BackButton from '@/components/ui/buttons/BackButton';\nimport PrimaryButton from '@/components/ui/buttons/PrimaryButton';\nimport useProfileForm from '@/hooks/useProfileForm';\n\nexport default function ProfileManagement() {\n  const { user, isLoading } = useUserProfile();\n\n  const initialProfile = useMemo(\n    () => ({\n      name: user?.name ?? '',\n      phone: user?.phone ?? '',\n      address: user?.address ?? '',\n    }),\n    [user?.name, user?.phone, user?.address]\n  );\n\n  const {\n    fields: form,\n    update,\n    dirty,\n    resetDirty,\n  } = useProfileForm(initialProfile);\n\n  const [busy, setBusy] = useState(false);\n  const [toast, setToast] = useState<'ok' | 'err' | null>(null);\n\n  const save = async () => {\n    if (!dirty) return;\n    setBusy(true);\n    try {\n      const res = await fetch('/api/user/profile', {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(form),\n      });\n      if (!res.ok) throw new Error();\n      setToast('ok');\n      resetDirty();\n    } catch {\n      setToast('err');\n    } finally {\n      setBusy(false);\n    }\n  };\n\n  if (isLoading || !user)\n    return (\n      <Box className=\"flex justify-center py-20\">\n        <CircularProgress />\n      </Box>\n    );\n\n  return (\n    <Box className=\"max-w-lg mx-auto px-4 pb-20 min-h-[90vh] flex flex-col\">\n      <Header\n        left={<BackButton smartNavigation />}\n        center={<h1 className=\"text-lg font-semibold\">My Profile</h1>}\n      />\n\n      <Box component=\"form\" className=\"flex flex-col gap-6 mt-6 flex-1\">\n        <TextField\n          label=\"Full Name\"\n          required\n          value={form.name}\n          onChange={e => update('name', e.target.value)}\n        />\n\n        <MuiTelInput\n          label=\"Phone\"\n          required\n          defaultCountry=\"LT\"\n          value={form.phone}\n          onChange={val => update('phone', val)}\n        />\n\n        <TextField\n          label=\"Address\"\n          multiline\n          rows={2}\n          value={form.address}\n          onChange={e => update('address', e.target.value)}\n          placeholder=\"Street, City, ZIP\"\n        />\n\n        <PrimaryButton\n          disabled={busy || !dirty || !form.name.trim() || !form.phone.trim()}\n          onClick={save}\n        >\n          {busy ? 'Savingâ€¦' : 'Save Changes'}\n        </PrimaryButton>\n      </Box>\n\n      <Snackbar\n        open={toast !== null}\n        autoHideDuration={3000}\n        onClose={() => setToast(null)}\n      >\n        {toast === 'ok' ? (\n          <Alert severity=\"success\" sx={{ width: '100%' }}>\n            Profile updated!\n          </Alert>\n        ) : (\n          <Alert severity=\"error\" sx={{ width: '100%' }}>\n            Something went wrong.\n          </Alert>\n        )}\n      </Snackbar>\n    </Box>\n  );\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b0fabd4f22b0267b4fb0ea01c5f5443c18e9e96a"}}
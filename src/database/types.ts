/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Favourites {
  createdAt: Generated<Timestamp>;
  petId: string;
  userId: string;
}

export interface PetImages {
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  orderIdx: Generated<number>;
  petId: string;
  url: string;
}

export interface Pets {
  ageGroup: string;
  breed: string | null;
  createdAt: Generated<Timestamp>;
  description: string | null;
  gender: Generated<string>;
  id: Generated<string>;
  name: string;
  ownerId: string;
  size: string;
  status: Generated<string>;
  type: string;
  updatedAt: Generated<Timestamp>;
}

export interface Users {
  auth0Id: string;
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  lastLoginAt: Timestamp | null;
  name: string | null;
  onboardingCompleted: Generated<boolean>;
  onboardingCompletedAt: Timestamp | null;
  phone: string | null;
  userType: string | null;
}

export interface DB {
  favourites: Favourites;
  petImages: PetImages;
  pets: Pets;
  users: Users;
}

{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/lib/auth0.ts"],"sourcesContent":["import { Auth0Client } from '@auth0/nextjs-auth0/server';\n\nexport const auth0 = new Auth0Client({\n  domain: process.env.AUTH0_DOMAIN,\n  clientId: process.env.AUTH0_CLIENT_ID,\n  clientSecret: process.env.AUTH0_CLIENT_SECRET,\n  secret: process.env.AUTH0_SECRET,\n  appBaseUrl: process.env.APP_BASE_URL,\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,MAAM,QAAQ,IAAI,8KAAA,CAAA,cAAW,CAAC;IACnC,QAAQ,QAAQ,GAAG,CAAC,YAAY;IAChC,UAAU,QAAQ,GAAG,CAAC,eAAe;IACrC,cAAc,QAAQ,GAAG,CAAC,mBAAmB;IAC7C,QAAQ,QAAQ,GAAG,CAAC,YAAY;IAChC,YAAY,QAAQ,GAAG,CAAC,YAAY;AACtC"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import type { NextRequest } from \"next/server\";\nimport { NextResponse } from \"next/server\";\nimport { auth0 } from \"./lib/auth0\";\n\n// Helper function to get management token and fetch user metadata\nasync function getUserMetadata(userId: string) {\n  try {\n    // Get Management API token\n    const tokenResponse = await fetch(`https://${process.env.AUTH0_DOMAIN}/oauth/token`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        client_id: process.env.AUTH0_M2M_CLIENT_ID,\n        client_secret: process.env.AUTH0_M2M_CLIENT_SECRET,\n        audience: `https://${process.env.AUTH0_DOMAIN}/api/v2/`,\n        grant_type: 'client_credentials'\n      })\n    });\n\n    const tokenData = await tokenResponse.json();\n    \n    if (!tokenResponse.ok) {\n      console.error('Failed to get management token:', tokenData);\n      return {};\n    }\n\n    // Fetch user metadata\n    const userResponse = await fetch(`https://${process.env.AUTH0_DOMAIN}/api/v2/users/${userId}`, {\n      headers: {\n        'Authorization': `Bearer ${tokenData.access_token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n\n    const userData = await userResponse.json();\n    \n    if (!userResponse.ok) {\n      console.error('Failed to fetch user data:', userData);\n      return {};\n    }\n\n    return userData.user_metadata || {};\n  } catch (error) {\n    console.error('Error fetching user metadata:', error);\n    return {};\n  }\n}\n\nexport async function middleware(request: NextRequest) {\n  const auth0Response = await auth0.middleware(request);\n\n  if (auth0Response.status !== 200) {\n    return auth0Response;\n  }\n\n  const session = await auth0.getSession(request);\n\n  if (session?.user) {\n    const { pathname } = request.nextUrl;\n\n    console.log(\"=== MIDDLEWARE DEBUG ===\");\n    console.log(\"Pathname:\", pathname);\n    console.log(\"User:\", session.user.email || session.user.sub);\n\n    // Skip API calls and auth routes to avoid infinite loops\n    if (pathname.startsWith(\"/api\") || pathname.startsWith(\"/auth\")) {\n      console.log(\"Skipping API/auth route\");\n      console.log(\"=== END MIDDLEWARE DEBUG ===\");\n      return auth0Response;\n    }\n\n    // Fetch user metadata from Auth0 Management API\n    const userMetadata = await getUserMetadata(session.user.sub);\n    console.log(\"Fetched user metadata:\", JSON.stringify(userMetadata, null, 2));\n    console.log(\"Onboarding completed:\", userMetadata.onboardingCompleted);\n\n    if (!pathname.startsWith(\"/onboarding\")) {\n      if (!userMetadata.onboardingCompleted) {\n        console.log(\"❌ Redirecting to onboarding - user has not completed onboarding\");\n        return NextResponse.redirect(new URL(\"/onboarding\", request.url));\n      } else {\n        console.log(\"✅ User has completed onboarding, allowing access\");\n      }\n    }\n\n    if (pathname.startsWith(\"/onboarding\") && userMetadata.onboardingCompleted) {\n      console.log(\"❌ Redirecting away from onboarding - user already completed\");\n      return NextResponse.redirect(new URL(\"/\", request.url));\n    }\n\n    console.log(\"=== END MIDDLEWARE DEBUG ===\");\n  } else {\n    console.log(\"❌ No session found\");\n  }\n\n  return auth0Response;\n}\n\nexport const config = {\n  matcher: [\n    \"/((?!_next/static|_next/image|favicon.ico|sitemap.xml|robots.txt|api/auth).*)\",\n  ],\n};"],"names":[],"mappings":";;;;AACA;AAAA;AACA;;;AAEA,kEAAkE;AAClE,eAAe,gBAAgB,MAAc;IAC3C,IAAI;QACF,2BAA2B;QAC3B,MAAM,gBAAgB,MAAM,MAAM,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;YACnF,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,WAAW,QAAQ,GAAG,CAAC,mBAAmB;gBAC1C,eAAe,QAAQ,GAAG,CAAC,uBAAuB;gBAClD,UAAU,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC;gBACvD,YAAY;YACd;QACF;QAEA,MAAM,YAAY,MAAM,cAAc,IAAI;QAE1C,IAAI,CAAC,cAAc,EAAE,EAAE;YACrB,QAAQ,KAAK,CAAC,mCAAmC;YACjD,OAAO,CAAC;QACV;QAEA,sBAAsB;QACtB,MAAM,eAAe,MAAM,MAAM,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,YAAY,CAAC,cAAc,EAAE,QAAQ,EAAE;YAC7F,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,UAAU,YAAY,EAAE;gBACnD,gBAAgB;YAClB;QACF;QAEA,MAAM,WAAW,MAAM,aAAa,IAAI;QAExC,IAAI,CAAC,aAAa,EAAE,EAAE;YACpB,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,OAAO,CAAC;QACV;QAEA,OAAO,SAAS,aAAa,IAAI,CAAC;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,CAAC;IACV;AACF;AAEO,eAAe,WAAW,OAAoB;IACnD,MAAM,gBAAgB,MAAM,2HAAA,CAAA,QAAK,CAAC,UAAU,CAAC;IAE7C,IAAI,cAAc,MAAM,KAAK,KAAK;QAChC,OAAO;IACT;IAEA,MAAM,UAAU,MAAM,2HAAA,CAAA,QAAK,CAAC,UAAU,CAAC;IAEvC,IAAI,SAAS,MAAM;QACjB,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;QAEpC,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,aAAa;QACzB,QAAQ,GAAG,CAAC,SAAS,QAAQ,IAAI,CAAC,KAAK,IAAI,QAAQ,IAAI,CAAC,GAAG;QAE3D,yDAAyD;QACzD,IAAI,SAAS,UAAU,CAAC,WAAW,SAAS,UAAU,CAAC,UAAU;YAC/D,QAAQ,GAAG,CAAC;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACT;QAEA,gDAAgD;QAChD,MAAM,eAAe,MAAM,gBAAgB,QAAQ,IAAI,CAAC,GAAG;QAC3D,QAAQ,GAAG,CAAC,0BAA0B,KAAK,SAAS,CAAC,cAAc,MAAM;QACzE,QAAQ,GAAG,CAAC,yBAAyB,aAAa,mBAAmB;QAErE,IAAI,CAAC,SAAS,UAAU,CAAC,gBAAgB;YACvC,IAAI,CAAC,aAAa,mBAAmB,EAAE;gBACrC,QAAQ,GAAG,CAAC;gBACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,eAAe,QAAQ,GAAG;YACjE,OAAO;gBACL,QAAQ,GAAG,CAAC;YACd;QACF;QAEA,IAAI,SAAS,UAAU,CAAC,kBAAkB,aAAa,mBAAmB,EAAE;YAC1E,QAAQ,GAAG,CAAC;YACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;QACvD;QAEA,QAAQ,GAAG,CAAC;IACd,OAAO;QACL,QAAQ,GAAG,CAAC;IACd;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;KACD;AACH"}}]
}
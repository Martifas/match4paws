{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///home/marty/turing/4-module/4-sprint/match4paws/src/lib/db.ts"],"sourcesContent":["import \"dotenv/config\";\nimport { Kysely, PostgresDialect, CamelCasePlugin } from \"kysely\";\nimport { Pool } from \"pg\";\nimport { DB } from \"@/database/types\";\n\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL,\n});\n\nconst dialect = new PostgresDialect({ pool });\n\nexport const db = new Kysely<DB>({\n  dialect,\n  plugins: [new CamelCasePlugin()],\n});\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;AAGA,MAAM,OAAO,IAAI,oGAAA,CAAA,OAAI,CAAC;IACpB,kBAAkB,QAAQ,GAAG,CAAC,YAAY;AAC5C;AAEA,MAAM,UAAU,IAAI,qLAAA,CAAA,kBAAe,CAAC;IAAE;AAAK;AAEpC,MAAM,KAAK,IAAI,iJAAA,CAAA,SAAM,CAAK;IAC/B;IACA,SAAS;QAAC,IAAI,6LAAA,CAAA,kBAAe;KAAG;AAClC","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/marty/turing/4-module/4-sprint/match4paws/src/lib/queries/favorites.ts"],"sourcesContent":["import { db } from \"@/lib/db\";\nimport { sql } from \"kysely\";\n\nexport async function addFavorite(\n  userId: string,\n  petId: string\n): Promise<void> {\n  await db\n    .insertInto(\"favourites\")\n    .values({ userId, petId })\n    .onConflict((oc) => oc.columns([\"userId\", \"petId\"]).doNothing())\n    .execute();\n}\n\nexport async function removeFavorite(\n  userId: string,\n  petId: string\n): Promise<void> {\n  await db\n    .deleteFrom(\"favourites\")\n    .where(\"userId\", \"=\", userId)\n    .where(\"petId\", \"=\", petId)\n    .execute();\n}\n\nexport async function getUserFavorites(userId: string): Promise<string[]> {\n  const favorites = await db\n    .selectFrom(\"favourites\")\n    .select([\"petId\"])\n    .where(\"userId\", \"=\", userId)\n    .execute();\n\n  return favorites.map((f) => f.petId);\n}\n\nexport type FavoritedPet = {\n  id: string;\n  name: string;\n  ageGroup: string;\n  breed: string | null;\n  size: string;\n  imageUrl: string | null;\n  favoritedAt: Date;\n};\n\nexport async function getUserFavoritedPets(\n  userId: string\n): Promise<FavoritedPet[]> {\n  return await db\n    .selectFrom(\"favourites as f\")\n    .innerJoin(\"pets as p\", \"p.id\", \"f.petId\")\n    .leftJoin(\"petImages as pi\", (j) =>\n      j.onRef(\"pi.petId\", \"=\", \"p.id\").on(\"pi.orderIdx\", \"=\", 0)\n    )\n    .select([\n      \"p.id\",\n      \"p.name\",\n      \"p.ageGroup\",\n      \"p.breed\",\n      \"p.size\",\n      sql<string>`pi.url`.as(\"imageUrl\"),\n      \"f.createdAt as favoritedAt\",\n    ])\n    .where(\"f.userId\", \"=\", userId)\n    .orderBy(\"f.createdAt\", \"desc\")\n    .execute();\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;;;;AAEO,eAAe,YACpB,MAAc,EACd,KAAa;IAEb,MAAM,kHAAA,CAAA,KAAE,CACL,UAAU,CAAC,cACX,MAAM,CAAC;QAAE;QAAQ;IAAM,GACvB,UAAU,CAAC,CAAC,KAAO,GAAG,OAAO,CAAC;YAAC;YAAU;SAAQ,EAAE,SAAS,IAC5D,OAAO;AACZ;AAEO,eAAe,eACpB,MAAc,EACd,KAAa;IAEb,MAAM,kHAAA,CAAA,KAAE,CACL,UAAU,CAAC,cACX,KAAK,CAAC,UAAU,KAAK,QACrB,KAAK,CAAC,SAAS,KAAK,OACpB,OAAO;AACZ;AAEO,eAAe,iBAAiB,MAAc;IACnD,MAAM,YAAY,MAAM,kHAAA,CAAA,KAAE,CACvB,UAAU,CAAC,cACX,MAAM,CAAC;QAAC;KAAQ,EAChB,KAAK,CAAC,UAAU,KAAK,QACrB,OAAO;IAEV,OAAO,UAAU,GAAG,CAAC,CAAC,IAAM,EAAE,KAAK;AACrC;AAYO,eAAe,qBACpB,MAAc;IAEd,OAAO,MAAM,kHAAA,CAAA,KAAE,CACZ,UAAU,CAAC,mBACX,SAAS,CAAC,aAAa,QAAQ,WAC/B,QAAQ,CAAC,mBAAmB,CAAC,IAC5B,EAAE,KAAK,CAAC,YAAY,KAAK,QAAQ,EAAE,CAAC,eAAe,KAAK,IAEzD,MAAM,CAAC;QACN;QACA;QACA;QACA;QACA;QACA,gKAAA,CAAA,MAAG,AAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB;KACD,EACA,KAAK,CAAC,YAAY,KAAK,QACvB,OAAO,CAAC,eAAe,QACvB,OAAO;AACZ","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///home/marty/turing/4-module/4-sprint/match4paws/src/lib/auth0.ts"],"sourcesContent":["import { Auth0Client } from '@auth0/nextjs-auth0/server';\n\nexport const auth0 = new Auth0Client({\n  domain: process.env.AUTH0_DOMAIN,\n  clientId: process.env.AUTH0_CLIENT_ID,\n  clientSecret: process.env.AUTH0_CLIENT_SECRET,\n  secret: process.env.AUTH0_SECRET,\n  appBaseUrl: process.env.APP_BASE_URL,\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,MAAM,QAAQ,IAAI,wKAAA,CAAA,cAAW,CAAC;IACnC,QAAQ,QAAQ,GAAG,CAAC,YAAY;IAChC,UAAU,QAAQ,GAAG,CAAC,eAAe;IACrC,cAAc,QAAQ,GAAG,CAAC,mBAAmB;IAC7C,QAAQ,QAAQ,GAAG,CAAC,YAAY;IAChC,YAAY,QAAQ,GAAG,CAAC,YAAY;AACtC","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///home/marty/turing/4-module/4-sprint/match4paws/src/lib/queries/users.ts"],"sourcesContent":["import { db } from '@/lib/db';\nimport { UpdateOnboardingRequest } from '@/lib/types/onboarding';\n\nexport type User = {\n  id: string;\n  auth0Id: string;\n  name?: string;\n  email?: string;\n  phone?: string;\n  userType?: string;\n  onboardingCompleted: boolean;\n  createdAt: Date;\n  lastLoginAt?: Date;\n};\n\nexport async function getUserByAuth0Id(\n  auth0Id: string\n): Promise<{ id: string } | null> {\n  return (\n    (await db\n      .selectFrom('users')\n      .select(['id'])\n      .where('auth0Id', '=', auth0Id)\n      .executeTakeFirst()) || null\n  );\n}\n\nexport async function getUserById(id: string): Promise<User | null> {\n  return (\n    (await db\n      .selectFrom('users')\n      .selectAll()\n      .where('id', '=', id)\n      .executeTakeFirst()) || null\n  );\n}\n\nexport async function createUser(auth0Id: string): Promise<void> {\n  await db\n    .insertInto('users')\n    .values({ auth0Id })\n    .onConflict(oc => oc.column('auth0Id').doNothing())\n    .execute();\n}\n\nexport async function updateLastLogin(auth0Id: string): Promise<void> {\n  await db\n    .updateTable('users')\n    .set({ lastLoginAt: new Date() })\n    .where('auth0Id', '=', auth0Id)\n    .execute();\n}\n\nexport async function getUserOnboardingStatus(\n  auth0Id: string\n): Promise<boolean> {\n  const result = await db\n    .selectFrom('users')\n    .select(['onboardingCompleted'])\n    .where('auth0Id', '=', auth0Id)\n    .executeTakeFirst();\n\n  return result?.onboardingCompleted ?? false;\n}\n\nexport async function updateUserOnboarding(\n  data: UpdateOnboardingRequest\n): Promise<void> {\n  const { userId, ...updateData } = data;\n\n  await db\n    .updateTable('users')\n    .set({\n      onboardingCompleted: true,\n      onboardingCompletedAt: new Date(),\n      ...updateData,\n    })\n    .where('auth0Id', '=', userId)\n    .execute();\n}\n\nexport async function updateUserProfile(\n  userId: string,\n  updates: Partial<Pick<User, 'name' | 'email' | 'phone'>>\n): Promise<void> {\n  await db.updateTable('users').set(updates).where('id', '=', userId).execute();\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;AAeO,eAAe,iBACpB,OAAe;IAEf,OACE,AAAC,MAAM,kHAAA,CAAA,KAAE,CACN,UAAU,CAAC,SACX,MAAM,CAAC;QAAC;KAAK,EACb,KAAK,CAAC,WAAW,KAAK,SACtB,gBAAgB,MAAO;AAE9B;AAEO,eAAe,YAAY,EAAU;IAC1C,OACE,AAAC,MAAM,kHAAA,CAAA,KAAE,CACN,UAAU,CAAC,SACX,SAAS,GACT,KAAK,CAAC,MAAM,KAAK,IACjB,gBAAgB,MAAO;AAE9B;AAEO,eAAe,WAAW,OAAe;IAC9C,MAAM,kHAAA,CAAA,KAAE,CACL,UAAU,CAAC,SACX,MAAM,CAAC;QAAE;IAAQ,GACjB,UAAU,CAAC,CAAA,KAAM,GAAG,MAAM,CAAC,WAAW,SAAS,IAC/C,OAAO;AACZ;AAEO,eAAe,gBAAgB,OAAe;IACnD,MAAM,kHAAA,CAAA,KAAE,CACL,WAAW,CAAC,SACZ,GAAG,CAAC;QAAE,aAAa,IAAI;IAAO,GAC9B,KAAK,CAAC,WAAW,KAAK,SACtB,OAAO;AACZ;AAEO,eAAe,wBACpB,OAAe;IAEf,MAAM,SAAS,MAAM,kHAAA,CAAA,KAAE,CACpB,UAAU,CAAC,SACX,MAAM,CAAC;QAAC;KAAsB,EAC9B,KAAK,CAAC,WAAW,KAAK,SACtB,gBAAgB;IAEnB,OAAO,QAAQ,uBAAuB;AACxC;AAEO,eAAe,qBACpB,IAA6B;IAE7B,MAAM,EAAE,MAAM,EAAE,GAAG,YAAY,GAAG;IAElC,MAAM,kHAAA,CAAA,KAAE,CACL,WAAW,CAAC,SACZ,GAAG,CAAC;QACH,qBAAqB;QACrB,uBAAuB,IAAI;QAC3B,GAAG,UAAU;IACf,GACC,KAAK,CAAC,WAAW,KAAK,QACtB,OAAO;AACZ;AAEO,eAAe,kBACpB,MAAc,EACd,OAAwD;IAExD,MAAM,kHAAA,CAAA,KAAE,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,SAAS,KAAK,CAAC,MAAM,KAAK,QAAQ,OAAO;AAC7E","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///home/marty/turing/4-module/4-sprint/match4paws/src/lib/utils/apiUtils.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { auth0 } from \"@/lib/auth0\";\nimport { getUserByAuth0Id } from \"@/lib/queries/users\";\n\nexport async function getUserFromSession(\n  req?: NextRequest\n): Promise<string | null> {\n  const session = await auth0.getSession();\n\n  if (!session?.user?.sub) {\n    return null;\n  }\n\n  const user = await getUserByAuth0Id(session.user.sub);\n  return user?.id ?? null;\n}\n\nexport function createErrorResponse(message: string, status: number) {\n  return NextResponse.json({ error: message }, { status });\n}\n\nexport function createSuccessResponse(data?: any) {\n  return NextResponse.json({ success: true, ...data });\n}\n\nexport async function validateJsonBody<T>(\n  req: NextRequest,\n  requiredFields: (keyof T)[]\n): Promise<T | NextResponse> {\n  try {\n    const body = (await req.json()) as T;\n\n    for (const field of requiredFields) {\n      if (!body[field]) {\n        return createErrorResponse(\n          `Missing required field: ${String(field)}`,\n          400\n        );\n      }\n    }\n\n    return body;\n  } catch (error) {\n    return createErrorResponse(\"Invalid JSON body\", 400);\n  }\n}\n"],"names":[],"mappings":"AAAA,oDAAoD,GACpD,qDAAqD;;;;;;AACrD;AACA;AACA;;;;;;;;AAEO,eAAe,mBACpB,GAAiB;IAEjB,MAAM,UAAU,MAAM,qHAAA,CAAA,QAAK,CAAC,UAAU;IAEtC,IAAI,CAAC,SAAS,MAAM,KAAK;QACvB,OAAO;IACT;IAEA,MAAM,OAAO,MAAM,CAAA,GAAA,gIAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,IAAI,CAAC,GAAG;IACpD,OAAO,MAAM,MAAM;AACrB;AAEO,SAAS,oBAAoB,OAAe,EAAE,MAAc;IACjE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAQ,GAAG;QAAE;IAAO;AACxD;AAEO,SAAS,sBAAsB,IAAU;IAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAM,GAAG,IAAI;IAAC;AACpD;AAEO,eAAe,iBACpB,GAAgB,EAChB,cAA2B;IAE3B,IAAI;QACF,MAAM,OAAQ,MAAM,IAAI,IAAI;QAE5B,KAAK,MAAM,SAAS,eAAgB;YAClC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,OAAO,oBACL,CAAC,wBAAwB,EAAE,OAAO,QAAQ,EAC1C;YAEJ;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,OAAO,oBAAoB,qBAAqB;IAClD;AACF","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///home/marty/turing/4-module/4-sprint/match4paws/src/app/api/favorites/route.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\nimport {\n  addFavorite,\n  removeFavorite,\n  getUserFavoritedPets,\n} from \"@/lib/queries/favorites\";\nimport {\n  getUserFromSession,\n  createErrorResponse,\n  createSuccessResponse,\n  validateJsonBody,\n} from \"@/lib/utils/apiUtils\";\n\ntype FavoriteRequestBody = {\n  petId: string;\n};\n\nexport async function GET() {\n  try {\n    const userId = await getUserFromSession();\n    if (!userId) {\n      return createErrorResponse(\"Unauthorized\", 401);\n    }\n\n    const favoritedPets = await getUserFavoritedPets(userId);\n\n    return createSuccessResponse({ pets: favoritedPets });\n  } catch (error) {\n    console.error(\"Error fetching favorites:\", error);\n    return createErrorResponse(\"Internal server error\", 500);\n  }\n}\n\nexport async function POST(req: NextRequest) {\n  try {\n    const bodyOrError = await validateJsonBody<FavoriteRequestBody>(req, [\n      \"petId\",\n    ]);\n    if (bodyOrError instanceof Response) {\n      return bodyOrError;\n    }\n\n    const { petId } = bodyOrError;\n\n    const userId = await getUserFromSession();\n    if (!userId) {\n      return createErrorResponse(\"Unauthorized\", 401);\n    }\n\n    await addFavorite(userId, petId);\n\n    return createSuccessResponse();\n  } catch (error) {\n    console.error(\"Error adding favorite:\", error);\n    return createErrorResponse(\"Internal server error\", 500);\n  }\n}\n\nexport async function DELETE(req: NextRequest) {\n  try {\n    const bodyOrError = await validateJsonBody<FavoriteRequestBody>(req, [\n      \"petId\",\n    ]);\n    if (bodyOrError instanceof Response) {\n      return bodyOrError;\n    }\n\n    const { petId } = bodyOrError;\n\n    const userId = await getUserFromSession();\n    if (!userId) {\n      return createErrorResponse(\"Unauthorized\", 401);\n    }\n\n    await removeFavorite(userId, petId);\n\n    return createSuccessResponse();\n  } catch (error) {\n    console.error(\"Error removing favorite:\", error);\n    return createErrorResponse(\"Internal server error\", 500);\n  }\n}\n"],"names":[],"mappings":";;;;;AACA;AAKA;;;;;;;;AAWO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,iIAAA,CAAA,qBAAkB,AAAD;QACtC,IAAI,CAAC,QAAQ;YACX,OAAO,CAAA,GAAA,iIAAA,CAAA,sBAAmB,AAAD,EAAE,gBAAgB;QAC7C;QAEA,MAAM,gBAAgB,MAAM,CAAA,GAAA,oIAAA,CAAA,uBAAoB,AAAD,EAAE;QAEjD,OAAO,CAAA,GAAA,iIAAA,CAAA,wBAAqB,AAAD,EAAE;YAAE,MAAM;QAAc;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,CAAA,GAAA,iIAAA,CAAA,sBAAmB,AAAD,EAAE,yBAAyB;IACtD;AACF;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,mBAAgB,AAAD,EAAuB,KAAK;YACnE;SACD;QACD,IAAI,uBAAuB,UAAU;YACnC,OAAO;QACT;QAEA,MAAM,EAAE,KAAK,EAAE,GAAG;QAElB,MAAM,SAAS,MAAM,CAAA,GAAA,iIAAA,CAAA,qBAAkB,AAAD;QACtC,IAAI,CAAC,QAAQ;YACX,OAAO,CAAA,GAAA,iIAAA,CAAA,sBAAmB,AAAD,EAAE,gBAAgB;QAC7C;QAEA,MAAM,CAAA,GAAA,oIAAA,CAAA,cAAW,AAAD,EAAE,QAAQ;QAE1B,OAAO,CAAA,GAAA,iIAAA,CAAA,wBAAqB,AAAD;IAC7B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,CAAA,GAAA,iIAAA,CAAA,sBAAmB,AAAD,EAAE,yBAAyB;IACtD;AACF;AAEO,eAAe,OAAO,GAAgB;IAC3C,IAAI;QACF,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,mBAAgB,AAAD,EAAuB,KAAK;YACnE;SACD;QACD,IAAI,uBAAuB,UAAU;YACnC,OAAO;QACT;QAEA,MAAM,EAAE,KAAK,EAAE,GAAG;QAElB,MAAM,SAAS,MAAM,CAAA,GAAA,iIAAA,CAAA,qBAAkB,AAAD;QACtC,IAAI,CAAC,QAAQ;YACX,OAAO,CAAA,GAAA,iIAAA,CAAA,sBAAmB,AAAD,EAAE,gBAAgB;QAC7C;QAEA,MAAM,CAAA,GAAA,oIAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ;QAE7B,OAAO,CAAA,GAAA,iIAAA,CAAA,wBAAqB,AAAD;IAC7B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,CAAA,GAAA,iIAAA,CAAA,sBAAmB,AAAD,EAAE,yBAAyB;IACtD;AACF","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/mgrumadas/projects/match4paws/src/app/api/update-onboarding/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\nexport async function POST(req: Request) {\n  try {\n    console.log('=== API DEBUG START ===');\n    \n    const body = await req.json();\n    console.log('Request body:', body);\n    \n    const { userId } = body;\n    const domain = process.env.AUTH0_DOMAIN;\n\n    console.log('User ID:', userId);\n    console.log('Domain:', domain);\n    console.log('M2M Client ID:', process.env.AUTH0_M2M_CLIENT_ID ? 'Set' : 'Missing');\n    console.log('M2M Client Secret:', process.env.AUTH0_M2M_CLIENT_SECRET ? 'Set' : 'Missing');\n\n    if (!userId || !domain) {\n      console.log('‚ùå Missing userId or domain');\n      return NextResponse.json(\n        { error: \"Missing user ID or Auth0 domain\" },\n        { status: 400 }\n      );\n    }\n\n    console.log('üîë Getting management token...');\n    const authRes = await fetch(`https://${domain}/oauth/token`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        client_id: process.env.AUTH0_M2M_CLIENT_ID,\n        client_secret: process.env.AUTH0_M2M_CLIENT_SECRET,\n        audience: `https://${domain}/api/v2/`,\n        grant_type: \"client_credentials\",\n      }),\n    });\n\n    const authData = await authRes.json();\n    console.log('Auth response status:', authRes.status);\n    \n    if (!authRes.ok) {\n      console.log('‚ùå Auth failed:', authData);\n      throw new Error('Failed to get management token');\n    }\n    \n    console.log('‚úÖ Got management token');\n    const { access_token } = authData;\n\n    // Using camelCase\n    const updatePayload = {\n      user_metadata: {\n        onboardingCompleted: true, // camelCase\n        onboardingCompletedAt: new Date().toISOString() // camelCase\n      }\n    };\n\n    console.log('üìù Updating user with payload:', JSON.stringify(updatePayload, null, 2));\n\n    const updateRes = await fetch(`https://${domain}/api/v2/users/${userId}`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updatePayload),\n    });\n\n    console.log('Update response status:', updateRes.status);\n    \n    const result = await updateRes.json();\n    console.log('Update result:', JSON.stringify(result, null, 2));\n\n    if (!updateRes.ok) {\n      console.log('‚ùå Update failed:', result);\n      throw new Error('Failed to update user');\n    }\n\n    console.log('‚úÖ User updated successfully');\n    console.log('Updated user_metadata:', JSON.stringify(result.user_metadata, null, 2));\n    console.log('=== API DEBUG END ===');\n\n    return NextResponse.json(result);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } catch (err: any) {\n    console.log('‚ùå API Error:', err.message);\n    console.log('=== API DEBUG END (ERROR) ===');\n    return NextResponse.json({ error: err.message }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,QAAQ,GAAG,CAAC;QAEZ,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,QAAQ,GAAG,CAAC,iBAAiB;QAE7B,MAAM,EAAE,MAAM,EAAE,GAAG;QACnB,MAAM,SAAS,QAAQ,GAAG,CAAC,YAAY;QAEvC,QAAQ,GAAG,CAAC,YAAY;QACxB,QAAQ,GAAG,CAAC,WAAW;QACvB,QAAQ,GAAG,CAAC,kBAAkB,QAAQ,GAAG,CAAC,mBAAmB,GAAG,QAAQ;QACxE,QAAQ,GAAG,CAAC,sBAAsB,QAAQ,GAAG,CAAC,uBAAuB,GAAG,QAAQ;QAEhF,IAAI,CAAC,UAAU,CAAC,QAAQ;YACtB,QAAQ,GAAG,CAAC;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkC,GAC3C;gBAAE,QAAQ;YAAI;QAElB;QAEA,QAAQ,GAAG,CAAC;QACZ,MAAM,UAAU,MAAM,MAAM,CAAC,QAAQ,EAAE,OAAO,YAAY,CAAC,EAAE;YAC3D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,WAAW,QAAQ,GAAG,CAAC,mBAAmB;gBAC1C,eAAe,QAAQ,GAAG,CAAC,uBAAuB;gBAClD,UAAU,CAAC,QAAQ,EAAE,OAAO,QAAQ,CAAC;gBACrC,YAAY;YACd;QACF;QAEA,MAAM,WAAW,MAAM,QAAQ,IAAI;QACnC,QAAQ,GAAG,CAAC,yBAAyB,QAAQ,MAAM;QAEnD,IAAI,CAAC,QAAQ,EAAE,EAAE;YACf,QAAQ,GAAG,CAAC,kBAAkB;YAC9B,MAAM,IAAI,MAAM;QAClB;QAEA,QAAQ,GAAG,CAAC;QACZ,MAAM,EAAE,YAAY,EAAE,GAAG;QAEzB,kBAAkB;QAClB,MAAM,gBAAgB;YACpB,eAAe;gBACb,qBAAqB;gBACrB,uBAAuB,IAAI,OAAO,WAAW,GAAG,YAAY;YAC9D;QACF;QAEA,QAAQ,GAAG,CAAC,kCAAkC,KAAK,SAAS,CAAC,eAAe,MAAM;QAElF,MAAM,YAAY,MAAM,MAAM,CAAC,QAAQ,EAAE,OAAO,cAAc,EAAE,QAAQ,EAAE;YACxE,QAAQ;YACR,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,cAAc;gBACvC,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,QAAQ,GAAG,CAAC,2BAA2B,UAAU,MAAM;QAEvD,MAAM,SAAS,MAAM,UAAU,IAAI;QACnC,QAAQ,GAAG,CAAC,kBAAkB,KAAK,SAAS,CAAC,QAAQ,MAAM;QAE3D,IAAI,CAAC,UAAU,EAAE,EAAE;YACjB,QAAQ,GAAG,CAAC,oBAAoB;YAChC,MAAM,IAAI,MAAM;QAClB;QAEA,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,0BAA0B,KAAK,SAAS,CAAC,OAAO,aAAa,EAAE,MAAM;QACjF,QAAQ,GAAG,CAAC;QAEZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,8DAA8D;IAC9D,EAAE,OAAO,KAAU;QACjB,QAAQ,GAAG,CAAC,gBAAgB,IAAI,OAAO;QACvC,QAAQ,GAAG,CAAC;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,IAAI,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACjE;AACF","debugId":null}}]
}